{"version":3,"sources":["ConfigAxios.js","User/Login/Login.jsx","User/UserAvatar.jsx","Post/Header.jsx","Post/Body.jsx","Post/Footer.jsx","Post/MainPostPage.jsx","Axios/Axios.jsx","Post/CreatePost.jsx","User/Account/Settings.jsx","Post/MyPosts.jsx","User/SignUp/Signup.jsx","Context/Reducers/Index.js","Navigation/Navbar.jsx","App.js","Navigation/getThePage.jsx","serviceWorker.js","index.js","User/Images/TestImage.jpg"],"names":["AxiosConfig","axios","defaults","headers","common","baseURL","withCredentials","Login","useState","Email","setEmail","Password","setPassword","isValidated","setIsValidated","isLoading","setIsLoading","incorrectLogin","setIncorrectLogin","dispatch","React","useContext","AuthContext","Container","className","onSubmit","e","preventDefault","to","pathname","Form","Col","FormGroup","Label","Input","invalid","type","id","autoFocus","value","required","onChange","text","target","placeholder","FormFeedback","Button","color","onClick","post","then","result","data","payload","catch","console","log","login","disabled","UserAvatar","props","src","TestImage","alt","styles","Inner","backgroundColor","UserName","display","padding","Header","textAlign","style","paddingTop","username","date","views","headerTitle","PostBody","margin","body","comment","marginLeft","textDecoration","cursor","Footer","upvote","UpVote","setUpVote","downvote","DownVote","setDownVote","Vote","setVote","handleVote","vote","ArrowDropUp","fontSize","ArrowDropDown","Root","MainPostPage","res","setRes","useEffect","get","map","index","idx","Card","key","marginBottom","marginTop","marginRight","AxiosCreatePost","Body","User_Id","d","Date","year","getFullYear","month","getMonth","day","getDate","hour","getHours","minute","getMinutes","second","getSeconds","HeaderandBody","status","alert","encodeURIComponent","Multiline","height","charCounter","CreatePost","setHeader","setBody","Row","maxLength","length","localStorage","getItem","AccountSettings","MyPosts","SignUp","FirstName","setFirstName","LastName","setLastName","setUserName","UsernameTaken","setUsernameTaken","EmailTaken","setEmailTaken","insertId","user_id","first_name","last_name","email_address","reducer","state","action","setItem","JSON","stringify","isAuthenticated","clear","NavbarComponent","isOpen","setIsOpen","paddingBottom","Navbar","light","expand","NavbarBrand","href","NavbarToggler","Collapse","navbar","Nav","loggedIn","NavItem","NavLink","window","location","UncontrolledDropdown","nav","inNavbar","DropdownToggle","caret","DropdownMenu","right","DropdownItem","divider","createContext","App","useReducer","Provider","paddingLeft","exact","path","Boolean","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","module","exports"],"mappings":"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","file":"static/js/main.041d1ed9.chunk.js","sourcesContent":["import axios from 'axios';\r\n\r\nconst AxiosConfig = () => {\r\n    // Indicate to the API that all requests for this app are AJAX\r\n    axios.defaults.headers.common['X-Requested-With'] = 'XMLHttpRequest';\r\n\r\n    // Set the baseURL for all requests to the API domain instead of the current domain\r\n    // Use your API's port number in place of 8090.\r\n    axios.defaults.baseURL = `http://159.89.87.67:3000/api/v1/`;\r\n\r\n\r\n    // Allow the browser to send cookies to the API domain (which include auth_token)\r\n    axios.defaults.withCredentials = true;\r\n\r\n    return axios;\r\n};\r\n\r\nexport default AxiosConfig();","import React, { useState, useEffect } from 'react';\r\nimport { AuthContext } from '../../App';\r\nimport axios from '../../ConfigAxios';\r\nimport {Redirect} from 'react-router-dom';\r\nimport {\r\n  Container, Col, Form,\r\n  FormGroup, Label, Input,\r\n  Button, FormFeedback\r\n} from 'reactstrap';\r\n\r\n\r\nfunction keyPress(e) {\r\n    if (e.keyCode === 13) {\r\n      console.log(\"Enter key was pressed\", e.target.value)\r\n    }\r\n}\r\n\r\nexport default function Login() {\r\n\r\n  const [Email, setEmail] = useState(null);\r\n  const [Password, setPassword] = useState(null);\r\n  const [isValidated, setIsValidated] = useState(false);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [incorrectLogin, setIncorrectLogin] = useState(false);\r\n  const { dispatch } = React.useContext(AuthContext);\r\n\r\n  function login(Email, Password) {\r\n    setIsLoading(true);\r\n    axios.post(`/user/login/${Email}/${Password}`).then( result => {\r\n      // Check if any user data return, if it did then we know the login was successful\r\n      if (!result.data[0]) {\r\n        // alert('Credentials incorrect. Please try again.')\r\n        setIsLoading(false);\r\n        setIncorrectLogin(true);\r\n        setEmail(\"\");\r\n        setPassword(\"\");\r\n      } else {\r\n        // alert('Login Successful.');\r\n        setIsValidated(true);\r\n        setIsLoading(false);\r\n        dispatch({\r\n          type: \"LOGIN\",\r\n          payload: result.data[0]\r\n      })\r\n      }\r\n    }).catch(e => console.log(\"Error: \", e));\r\n  };\r\n\r\n  return(\r\n    <Container className=\"center-sign-up card-sign-up\" onSubmit={e => e.preventDefault() }>\r\n      <h2 className=\"sign-up-header\">Login</h2>\r\n        {isValidated && <Redirect to={{ pathname: \"/Home\" }}/>}\r\n        <Form>\r\n          <Col>\r\n          <FormGroup>\r\n            <Label>Email</Label>\r\n            {!incorrectLogin ?\r\n            <Input\r\n              type=\"email\"\r\n              id=\"Email\"\r\n              autoFocus\r\n              value={Email}\r\n              required\r\n              onChange={(text) => setEmail(text.target.value)}\r\n              placeholder=\"Ex: JohnSmith@gmail.com\"\r\n            />\r\n            :\r\n            <Input\r\n            invalid\r\n            type=\"email\"\r\n            id=\"Email\"\r\n            autoFocus\r\n            value={Email}\r\n            required\r\n            onChange={(text) => setEmail(text.target.value)}\r\n            placeholder=\"Ex: JohnSmith@gmail.com\"\r\n            />\r\n            }\r\n          {!incorrectLogin ? \"\" : <FormFeedback>Email/Password incorrect. Please try again.</FormFeedback>}\r\n          </FormGroup>\r\n          </Col>\r\n        </Form>\r\n\r\n        <Form>\r\n          <Col>\r\n          <FormGroup>\r\n            <Label>Password</Label>\r\n            {!incorrectLogin ?\r\n            <Input\r\n            type=\"password\"\r\n            value={Password}\r\n            required\r\n            onChange={text => setPassword(text.target.value)}\r\n            placeholder=\"********\"\r\n            />\r\n            :\r\n            <Input\r\n            invalid\r\n            type=\"password\"\r\n            value={Password}\r\n            required\r\n            onChange={text => setPassword(text.target.value)}\r\n            placeholder=\"********\"\r\n            />\r\n            }\r\n          {!incorrectLogin ? \"\" : <FormFeedback>Email/Password incorrect. Please try again.</FormFeedback>}\r\n            </FormGroup>\r\n          </Col>\r\n          <Col>\r\n            <Button\r\n            className=\"btn-100\"\r\n            color=\"primary\"\r\n            onClick={() => login(Email, Password)}\r\n            disabled={isLoading}\r\n            >{isLoading ? 'Loading...' : 'Submit'}</Button>\r\n          </Col>\r\n        </Form>\r\n    </Container>\r\n  )\r\n}","import React from 'react';\r\nimport TestImage from './Images/TestImage.jpg';\r\n\r\nexport default function UserAvatar(props) {\r\n  return (\r\n    <img\r\n    src={TestImage}\r\n    alt=\"Username here from axios\"\r\n    className=\"img-circle-small\"\r\n    />\r\n  )\r\n};","import React from 'react';\r\nimport { Col } from 'reactstrap';\r\nimport UserAvatar from '../User/UserAvatar';\r\n\r\nconst styles = {\r\n  Inner: {\r\n  backgroundColor: \"blue\",\r\n  },\r\n  UserName: {\r\n    display: \"inline\",\r\n    padding: \"15px\",\r\n\r\n  },\r\n  Header: {\r\n    textAlign: \"center\",\r\n  }\r\n};\r\n\r\nexport default function Header(props) {\r\n\r\n  // TODO: Format the date and time in a friendly format\r\n  return (\r\n    <Col style={{paddingTop: \"10px\"}}>\r\n        <UserAvatar />\r\n        <p style={styles.UserName}>{props.username}</p>\r\n        <p style={styles.UserName}>{props.date}</p>\r\n        <p style={styles.UserName}>Viewed: {props.views ? props.views + \" \" : \"0 \" } times</p>\r\n        <h2 style={styles.Header}>{props.headerTitle}</h2>\r\n      </Col>\r\n  )};","import React from 'react';\r\n\r\nexport default function PostBody(props) {\r\n  return(\r\n    <div style={{margin: \"20px\"}}>\r\n      {props.body}\r\n    </div>\r\n  )\r\n}","import React, { useState } from 'react';\r\nimport { ArrowDropUp, ArrowDropDown } from '@material-ui/icons';\r\n\r\nconst styles ={\r\n  comment: {\r\n    marginLeft: \"25px\",\r\n    display: \"inline\",\r\n    color: \"blue\",\r\n    textDecoration: \"underline\",\r\n    cursor: \"pointer\"}\r\n}\r\n\r\nexport default function Footer(props) {\r\n\r\n  const [UpVote, setUpVote] = useState(props.upvote);\r\n  const [DownVote, setDownVote] = useState(props.downvote);\r\n  const [Vote, setVote] = useState(null);\r\n\r\n  function handleVote(vote) {\r\n    if (vote === \"up\") {\r\n      if (!Vote){\r\n        setUpVote(UpVote + 1);\r\n        setVote(\"up\");\r\n      } else if (Vote === \"down\") {\r\n        setUpVote(UpVote + 1);\r\n        setVote(\"up\");\r\n        setDownVote(DownVote - 1);\r\n      }\r\n      else if (Vote === \"up\") {\r\n        setUpVote(UpVote - 1);\r\n        setVote(null);\r\n      }\r\n    }\r\n\r\n    else if (vote === \"down\") {\r\n    // If the vote is down, and hasnt been voted for yet, add 1 to downvote\r\n      if (!Vote) {\r\n        setDownVote(DownVote + 1);\r\n        setVote(\"down\");\r\n      }\r\n      // If the user has already voted up and now clicked the down, it will\r\n      // remove one from the up vote and add one to the down vote\r\n      else if (Vote === \"up\") {\r\n      setUpVote(UpVote - 1);\r\n      setDownVote(DownVote + 1)\r\n      setVote(\"down\");\r\n    }\r\n    // If the user decides to revoke a vote, allow the user to do so\r\n    else if (Vote === \"down\") {\r\n      setDownVote(DownVote - 1);\r\n      setVote(null);\r\n    }\r\n  }\r\n  }\r\n\r\n  return(\r\n    <div>\r\n      <button className=\"vote-btn\">\r\n        <ArrowDropUp style={{fontSize: \"40px\"}} onClick={() => handleVote(\"up\")}/>\r\n      </button>\r\n      {UpVote ? UpVote : \"0\"}\r\n\r\n      <button className=\"vote-btn\">\r\n        <ArrowDropDown style={{fontSize: \"40px\"}} onClick={() => handleVote(\"down\")}/>\r\n      </button>\r\n      {DownVote ? DownVote : \"0\"}\r\n      <p\r\n      style={styles.comment}\r\n      onClick={() => console.log(\"This will make the comment module popout from under the current post\")}\r\n      >Add Comment</p>\r\n    </div>\r\n  )\r\n}","import React, { useEffect } from 'react';\r\nimport Header from './Header';\r\nimport Body from './Body';\r\nimport Footer from './Footer';\r\nimport axios from '../ConfigAxios';\r\nimport { Card } from '@material-ui/core';\r\n\r\nimport {\r\n  Row,\r\n  Col,\r\n} from 'reactstrap';\r\n\r\nconst styles = {\r\n  Root: {\r\n  // height: \"95vh\",\r\n  backgroundColor: \"#515585\",\r\n  margin: \"10px\",\r\n  padding: \"15px\"\r\n  }\r\n};\r\n\r\n\r\nexport default function MainPostPage(props) {\r\n\r\n  // Will change to post_id and user_id\r\n  // AxiosGetPost(23, 1)\r\n  const [res, setRes] = React.useState([]);\r\n\r\n  useEffect(() => {\r\n    axios.get(`/post/getAllPosts`).then( result => {\r\n      setRes(result.data);\r\n    }).catch(e => console.log(e));\r\n  }, []);\r\n\r\n\r\n  return (\r\n    <Col style={styles.Root}>\r\n      {\r\n        res.map((index, idx) => (\r\n          <Card key={idx} style={{marginBottom: \"5px\", marginTop: \"5px\", marginRight: \"5px\"}}>\r\n            <Header\r\n                username={index[\"first_name\"]}\r\n                date={index[\"time_date\"]}\r\n                headerTitle={index[\"post_header\"]}\r\n                views={index[\"views\"]}\r\n              />\r\n              <hr style={{marginLeft: \"100px\", marginRight: \"100px\"}}/>\r\n              <Body body={index[\"post_body\"]}/>\r\n              {index[\"post_body\"] && <hr/>}\r\n              <Footer upvote={index[\"post_up_votes\"]} downvote={index[\"post_down_votes\"]}/>\r\n            </Card>\r\n        ))\r\n      }\r\n    </Col>\r\n  )\r\n};","import axios from '../ConfigAxios';\r\n\r\nexport function AxiosCreatePost(Header, Body, User_Id) {\r\n  // Format the date so we can add to MySQL\r\n  const date = getDate();\r\n\r\n  // Differentiate between if they have a a body or not\r\n  // const HeaderOnly = `/post/create/${Header}/${User_Id}`;\r\n  const HeaderandBody = `/post/create/${e(Header)}/${e(Body)}/${User_Id}/${date}`;\r\n  // const method = Body ? HeaderandBody : HeaderOnly;\r\n\r\n  axios.post(HeaderandBody).then(result => {\r\n    if (result.status === 200) {\r\n      alert(\"Your post has been added!\");\r\n    } else {\r\n      console.log(\"Return code: \", result.status);\r\n      alert(\"Something may have went wrong. Please try clicking submit one more time. Error Code: \", result.status);\r\n    }\r\n  }).catch(e => console.log(e));\r\n};\r\n\r\n\r\nexport function AxiosGetPost(Post_Id, User_Id) {\r\n  axios.get(`/post/get/${User_Id}/${Post_Id}`).then( result => {\r\n    return result.data[0];\r\n  }).catch(e => console.log(e));\r\n  console.log(\"returning\")\r\n};\r\n\r\nfunction getDate() {\r\n  let d = new Date();\r\n  let year = d.getFullYear();\r\n  let month = d.getMonth() + 1; // Javascript months are 0-11\r\n  let day = d.getDate();\r\n  let hour = d.getHours();\r\n  let minute = d.getMinutes();\r\n  let second = d.getSeconds();\r\n  return (year + \"-\" + month + \"-\" + day + \"-\" + hour + \":\" + minute + \":\" + second)\r\n}\r\n\r\nfunction e(e) {\r\n  return encodeURIComponent(e);\r\n}","import React, { useState } from 'react';\r\nimport {\r\n  Row,\r\n  Col,\r\n  Button,\r\n  Input\r\n} from 'reactstrap';\r\nimport { AxiosCreatePost } from '../Axios/Axios';\r\n\r\nconst styles = {\r\n  Root: {\r\n    margin: 10\r\n  },\r\n  Input: {\r\n    marginTop: \"10px\"\r\n  },\r\n  Multiline: {\r\n    height: \"500px\",\r\n    marginTop: \"10px\"\r\n  },\r\n  charCounter: {\r\n    textAlign: \"right\",\r\n  },\r\n  Body: {\r\n    margin: \"20px 10px 10px 10px\"\r\n  }\r\n}\r\n\r\n\r\n\r\nexport default function CreatePost() {\r\n\r\n  const [Header, setHeader] = useState(null);\r\n  const [Body, setBody] = useState(null);\r\n\r\n  function CheckInput() {\r\n    if (!Header) {\r\n      alert('Please fill out the question field.');\r\n    } else {\r\n      // TODO: Update so that the user id is the currently logged in user\r\n      AxiosCreatePost(Header, Body, localStorage.getItem(\"user_id\"));\r\n      // Was going to set this to null for memory leaks but taking out for now as I test\r\n      // setHeader(null);\r\n      // setBody(null);\r\n      // TODO: Redirect to page for the post that was just created\r\n    };\r\n  };\r\n\r\n  function CancelPost() {\r\n    // Add modal here to check if they want to cancel\r\n  }\r\n\r\n  return(\r\n    <Col style={styles.Root}>\r\n      <Row style={styles.Root}>\r\n        <h4>Title</h4>\r\n        <Input\r\n        style={styles.Input}\r\n        placeholder=\"Ex: Is bigfoot real?\"\r\n        onChange={text => setHeader(text.target.value)}\r\n        maxLength=\"100\"\r\n        type=\"text\"\r\n        required\r\n        />\r\n      </Row>\r\n      <Row style={styles.Body}>\r\n        Include all information that you deem necessary for someone to answer your post (optional):\r\n        <Input\r\n        type=\"textarea\"\r\n        style={styles.Multiline}\r\n        placeholder=\"Ex: If you believe bigfoot is real, where do you think it lives and how tall is it?\"\r\n        onChange={text => setBody(text.target.value)}\r\n        maxLength=\"5000\"\r\n        />\r\n      </Row>\r\n      <Col style={styles.charCounter}>\r\n        <p>{Body ? Body.length : 0}/5000</p>\r\n      </Col>\r\n      <Row style={styles.Body}>\r\n        <Button color=\"primary\" onClick={() => CheckInput()}>Submit</Button> &nbsp;\r\n        <Button color=\"primary\" onClick={() => CancelPost()}>Cancel</Button>\r\n      </Row>\r\n    </Col>\r\n  )\r\n};","import React, { useState } from 'react';\r\nimport {\r\n  Container, Col, Form,\r\n  FormGroup, Label, Input,\r\n  Button,\r\n} from 'reactstrap';\r\nimport AvatarPic from '../UserAvatar';\r\n\r\nexport default function AccountSettings() {\r\n\r\n  // These null values will be pulled from axios instead\r\n  // I may add a delete account function\r\n  // Darkmode should load all pages with darkmode from now on, or at least\r\n  // with components that are white\r\n  const [Email, setEmail] = useState(null);\r\n  const [Password, setPassword] = useState(null);\r\n  const [Avatar, setAvatar] = useState(null);\r\n  const [DarkMode, setDarkMode] = useState(false);\r\n  const [FirstName, setFirstName] = useState(null);\r\n  const [LastName, setLastName] = useState(null);\r\n\r\n  return (\r\n    <Container className=\"center-settings\">\r\n      <Label>Welcome, {localStorage.getItem('first_name')}</Label>\r\n      <p>Below are your account settings.</p>\r\n\r\n      <Form>\r\n\r\n      <Col>\r\n          <FormGroup>\r\n            <AvatarPic onClick={() => console.log(\"Will change the picture and use file upload\")}/>\r\n          </FormGroup>\r\n        </Col>\r\n\r\n        <Col>\r\n          <FormGroup>\r\n            <Label>Email</Label>\r\n            <Input\r\n            placeholder={localStorage.getItem('email_address')}\r\n            type=\"text\"\r\n            id=\"Email\"\r\n            maxLength=\"50\"\r\n            required\r\n            />\r\n          </FormGroup>\r\n        </Col>\r\n\r\n        <Col>\r\n          <FormGroup>\r\n            <Label>Password</Label>\r\n            <Input\r\n            placeholder=\"*********\"\r\n            type=\"password\"\r\n            id=\"password\"\r\n            maxLength=\"50\"\r\n            required\r\n            />\r\n          </FormGroup>\r\n        </Col>\r\n\r\n        <Col>\r\n          <FormGroup>\r\n            <Label>First Name</Label>\r\n            <Input\r\n            placeholder={localStorage.getItem('first_name')}\r\n            type=\"text\"\r\n            id=\"Name\"\r\n            maxLength=\"50\"\r\n            required\r\n            />\r\n          </FormGroup>\r\n        </Col>\r\n\r\n        <Col>\r\n          <FormGroup>\r\n            <Label>Last Name</Label>\r\n            <Input\r\n            placeholder={localStorage.getItem('last_name')}\r\n            type=\"text\"\r\n            id=\"Name\"\r\n            maxLength=\"50\"\r\n            required\r\n            />\r\n          </FormGroup>\r\n        </Col>\r\n\r\n        <Col>\r\n          <FormGroup>\r\n            <Label>Dark Mode Toggle</Label>\r\n\r\n          </FormGroup>\r\n        </Col>\r\n        <Col>\r\n          <Button className=\"btn-100\" color=\"primary\">Save</Button>\r\n        </Col>\r\n      </Form>\r\n    </Container>\r\n  )\r\n}","import React, { useEffect } from 'react';\r\nimport Header from './Header';\r\nimport Body from './Body';\r\nimport Footer from './Footer';\r\nimport axios from '../ConfigAxios';\r\nimport { Card } from '@material-ui/core';\r\n\r\nimport {\r\n  Row,\r\n  Col,\r\n} from 'reactstrap';\r\n\r\nconst styles = {\r\n  Root: {\r\n  // height: \"95vh\",\r\n  backgroundColor: \"#515585\",\r\n  margin: \"10px\",\r\n  padding: \"15px\"\r\n  }\r\n};\r\n\r\n\r\nexport default function MyPosts(props) {\r\n\r\n  // Will change to post_id and user_id\r\n  // AxiosGetPost(23, 1)\r\n  const [res, setRes] = React.useState([]);\r\n\r\n  useEffect(() => {\r\n    axios.get(`/post/get/${localStorage.getItem('user_id')}`).then( result => {\r\n      setRes(result.data);\r\n    }).catch(e => console.log(e));\r\n    // Update the document title using the browser API\r\n  }, []);\r\n\r\n  return (\r\n    <Col style={styles.Root}>\r\n      {\r\n        res.map((index, idx) => (\r\n          <Card key={idx} style={{marginBottom: \"5px\", marginTop: \"5px\", marginRight: \"5px\"}}>\r\n            <Header\r\n                username={props.username}\r\n                date={index[\"time_date\"]}\r\n                headerTitle={index[\"post_header\"]}\r\n                views={props.views}\r\n              />\r\n              <hr style={{marginLeft: \"100px\", marginRight: \"100px\"}}/>\r\n              <Body body={index[\"post_body\"]}/>\r\n              {props.body && <hr/>}\r\n              <Footer upvote={0} downvote={0}/>\r\n            </Card>\r\n        ))\r\n      }\r\n    </Col>\r\n  )\r\n};","import React, { useState } from 'react';\r\nimport axios from '../../ConfigAxios';\r\nimport {Redirect} from 'react-router-dom';\r\nimport { AuthContext } from '../../App';\r\nimport {\r\n  Container, Col, Form,\r\n  FormGroup, Label, Input,\r\n  Button, FormFeedback\r\n} from 'reactstrap';\r\n\r\nexport default function SignUp() {\r\n\r\n  const [FirstName, setFirstName] = useState(null);\r\n  const [LastName, setLastName] = useState(null);\r\n  const [UserName, setUserName] = useState(null);\r\n  const [Email, setEmail] = useState(null);\r\n  const [Password, setPassword] = useState(null);\r\n  const [User_ID, setUser_ID] = useState(null);\r\n  const [UsernameTaken, setUsernameTaken] = useState(false);\r\n  const [EmailTaken, setEmailTaken] = useState(false);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [isValidated, setIsValidated] = useState(false);\r\n  const { dispatch } = React.useContext(AuthContext);\r\n\r\n  function signup() {\r\n    setIsLoading(true);\r\n    axios.get(`/user/checkUsername/${UserName}`).then ( result => {\r\n      if (!result.data[0]) {\r\n        axios.get(`/user/checkEmail/${encodeURIComponent(Email)}`).then ( result => {\r\n          if (!result.data[0]) {\r\n            axios.post(`/user/signup/${UserName}/${Password}`).then ( result => {\r\n              let id = result.data.insertId;\r\n              // If the creation was sucessful, continue to add the rest of the data\r\n              axios.post(`/user/signup/${result.data.insertId}/${FirstName}/${LastName}/${encodeURIComponent(Email)}`).then( result => {\r\n                setIsLoading(false);\r\n                setIsValidated(true);\r\n                let payload = {user_id: id, first_name: FirstName, last_name: LastName, email_address: Email};\r\n                dispatch({\r\n                  type: \"LOGIN\",\r\n                  payload: payload\r\n              })\r\n                console.log(\"Account should have been created\");\r\n              }).catch(e => console.log(\"Error: \", e));\r\n            }).catch( e => console.log(\"Error: \", e));\r\n              } else {\r\n                setEmailTaken(true);\r\n                setEmail(\"\");\r\n                setIsLoading(false);\r\n              }\r\n        });\r\n      } else {\r\n        setUsernameTaken(true);\r\n        setUserName(\"\");\r\n        setIsLoading(false);\r\n      }\r\n    });\r\n  };\r\n\r\n  return (\r\n    <Container className=\"center-sign-up card-sign-up\" onSubmit={e => e.preventDefault()}>\r\n      <h2 className=\"sign-up-header\">Sign-up</h2>\r\n      {isValidated && <Redirect to={{ pathname: \"/Home\" }}/>}\r\n      <Form className=\"form\">\r\n        <Col>\r\n          <FormGroup>\r\n          <Label>First Name</Label>\r\n          <Input\r\n          type=\"text\"\r\n          id=\"Name\"\r\n          autoFocus\r\n          placeholder=\"Ex: John\"\r\n          maxLength=\"50\"\r\n          required\r\n          onChange={(text) => setFirstName(text.target.value)}\r\n          />\r\n          </FormGroup>\r\n        </Col>\r\n\r\n        <Col>\r\n          <FormGroup>\r\n            <Label>Last Name</Label>\r\n            <Input\r\n            type=\"text\"\r\n            id=\"LastName\"\r\n            placeholder=\"Ex: Smith\"\r\n            maxLength=\"50\"\r\n            required\r\n            onChange={(text) => setLastName(text.target.value)}\r\n            />\r\n          </FormGroup>\r\n        </Col>\r\n\r\n        <Col>\r\n          <FormGroup>\r\n            <Label>Username</Label>\r\n            {!UsernameTaken ?\r\n            <Input\r\n            type=\"Username\"\r\n            id=\"Username\"\r\n            placeholder=\"Ex: j.smith294\"\r\n            maxLength=\"50\"\r\n            required\r\n            onChange={(text) => setUserName(text.target.value)}\r\n            />\r\n            :\r\n            <Input\r\n            invalid\r\n            type=\"Username\"\r\n            id=\"Username\"\r\n            autoFocus\r\n            placeholder=\"Ex: j.smith294\"\r\n            maxLength=\"50\"\r\n            required\r\n            onChange={(text) => setUserName(text.target.value)}\r\n            />\r\n            }\r\n            {UsernameTaken && <FormFeedback>Username is already taken.</FormFeedback>}\r\n          </FormGroup>\r\n        </Col>\r\n\r\n        <Col>\r\n          <FormGroup>\r\n            <Label>Email</Label>\r\n            {!EmailTaken ?\r\n            <Input\r\n            type=\"email\"\r\n            id=\"Email\"\r\n            placeholder=\"Ex: JohnSmith@gmail.com\"\r\n            maxLength=\"100\"\r\n            required\r\n            onChange={(text) => setEmail(text.target.value)}\r\n            />\r\n            :\r\n            <Input\r\n            invalid\r\n            type=\"email\"\r\n            id=\"Email\"\r\n            autoFocus\r\n            placeholder=\"Ex: JohnSmith@gmail.com\"\r\n            maxLength=\"100\"\r\n            required\r\n            onChange={(text) => setEmail(text.target.value)}\r\n            />\r\n            }\r\n            {EmailTaken && <FormFeedback>Email already in use.</FormFeedback>}\r\n          </FormGroup>\r\n        </Col>\r\n\r\n        <Col>\r\n            <FormGroup>\r\n              <Label>Password</Label>\r\n              <Input\r\n                type=\"password\"\r\n                id=\"password\"\r\n                placeholder=\"********\"\r\n                onChange={(text) => setPassword(text.target.value)}\r\n            />\r\n            </FormGroup>\r\n          </Col>\r\n          <Col>\r\n            <Button\r\n            className=\"btn-100\"\r\n            color=\"primary\"\r\n            onClick={() => signup()}\r\n            disabled={isLoading}\r\n            >{isLoading ? 'Loading...' : 'Submit'}</Button>\r\n          </Col>\r\n      </Form>\r\n    </Container>\r\n  )\r\n};","const initialState = {\r\n  isAuthenticated: false,\r\n  user: null,\r\n  token: null,\r\n};\r\nexport const reducer = (state, action) => {\r\n  switch (action.type) {\r\n    case \"LOGIN\":\r\n        localStorage.setItem(\"user_id\", JSON.stringify(action.payload.user_id));\r\n        localStorage.setItem(\"first_name\", JSON.stringify(action.payload.first_name));\r\n        localStorage.setItem(\"last_name\", JSON.stringify(action.payload.last_name));\r\n        localStorage.setItem(\"email_address\", JSON.stringify(action.payload.email_address));\r\n      return {\r\n        ...state,\r\n        isAuthenticated: true,\r\n        user_id: action.payload.user_id,\r\n        first_name: action.payload.first_name,\r\n        last_name: action.payload.last_name,\r\n        email_address: action.payload.email_address\r\n        };\r\n    case \"LOGOUT\":\r\n        localStorage.clear();\r\n      return {\r\n        ...state,\r\n        isAuthenticated: false,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};","import React, { useState } from 'react';\r\nimport {\r\n  Collapse,\r\n  Navbar,\r\n  NavbarToggler,\r\n  NavbarBrand,\r\n  Nav,\r\n  NavItem,\r\n  NavLink,\r\n  UncontrolledDropdown,\r\n  DropdownToggle,\r\n  DropdownMenu,\r\n  DropdownItem,\r\n  // NavbarText\r\n} from 'reactstrap';\r\n\r\nfunction handleLogout() {\r\n  // We clear the storage so we know that we are logged out,\r\n  // then redirect to the login page and reload so we can make sure the\r\n  // sidebar does not show\r\n  localStorage.clear();\r\n  // window.location.reload(true);\r\n  window.location.pathname=\"/\";\r\n}\r\n\r\nconst NavbarComponent = (props) => {\r\n  const [isOpen, setIsOpen] = useState(false);\r\n\r\n  const toggle = () => setIsOpen(!isOpen);\r\n\r\n  return (\r\n    <div style={{paddingBottom: \"50px\"}}>\r\n      <Navbar color=\"light\" light expand=\"md\" className=\"fixed-top\">\r\n        <NavbarBrand href=\"/\">Something to Rant About</NavbarBrand>\r\n        <NavbarToggler onClick={toggle} />\r\n        <Collapse isOpen={isOpen} navbar>\r\n          <Nav className=\"mr-auto\" navbar>\r\n              {\r\n                !props.loggedIn ?\r\n                <>\r\n                  <NavItem>\r\n                    <NavLink href=\"/Login\">Login</NavLink>\r\n                  </NavItem>\r\n                  <NavItem>\r\n                    <NavLink href=\"/Signup\">Sign-up</NavLink>\r\n                  </NavItem>\r\n                </>\r\n                :\r\n                <>\r\n                  <NavItem>\r\n                    <NavLink href=\"/Home\">Home</NavLink>\r\n                  </NavItem>\r\n                  <NavItem>\r\n                    <NavLink href=\"/New Post\">New Post</NavLink>\r\n                  </NavItem>\r\n                  <NavItem>\r\n                    <NavLink href=\"/My Posts\">My Posts</NavLink>\r\n                  </NavItem>\r\n                  <NavItem>\r\n                    <NavLink href=\"/Account\">Account</NavLink>\r\n                  </NavItem>\r\n                  <NavItem>\r\n                    <NavLink href=\"/\" onClick={() => handleLogout()}>Logout</NavLink>\r\n                  </NavItem>\r\n                </>\r\n              }\r\n            <UncontrolledDropdown nav inNavbar>\r\n              <DropdownToggle nav caret>\r\n                Options\r\n              </DropdownToggle>\r\n              <DropdownMenu right>\r\n                <DropdownItem>\r\n                  Option 1\r\n                </DropdownItem>\r\n                <DropdownItem>\r\n                  Option 2\r\n                </DropdownItem>\r\n                <DropdownItem divider />\r\n                <DropdownItem>\r\n                  Reset\r\n                </DropdownItem>\r\n              </DropdownMenu>\r\n            </UncontrolledDropdown>\r\n          </Nav>\r\n          {/* <NavbarText>Simple Text</NavbarText> */}\r\n        </Collapse>\r\n      </Navbar>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default NavbarComponent;","import React from 'react';\nimport './App.css';\n// import NavBar from \"./Components/Stateless/NavBar\";\nimport getThePage from './Navigation/getThePage';\nimport SideBar from './Components/SideBar';\nimport { Row, Col } from 'reactstrap';\nimport { reducer } from './Context/Reducers/Index';\nimport { Redirect } from 'react-router-dom';\nimport Navbar from './Navigation/Navbar';\nexport const AuthContext = React.createContext();\n\nfunction App() {\n\n  const [state, dispatch] = React.useReducer(reducer, false);\n  const [Logout, setLogout] = React.useState(false);\n\n  // Change the default font to use Roboto\n  // const font = <link href=\"https://fonts.googleapis.com/css?family=Slabo+27px&display=swap\" rel=\"stylesheet\"/>;\n\n  function logout() {\n    dispatch({type: \"LOGOUT\"});\n    setLogout(!Logout);\n  };\n\n  return (\n    <AuthContext.Provider value={{state, dispatch}}>\n       <Navbar loggedIn={localStorage.getItem(\"user_id\")}/>\n      <Row>\n        {/* {localStorage.getItem(\"user_id\") && <SideBar/>} */}\n        <Col style={{paddingLeft: \"0px\"}}>\n       \n        {getThePage()}\n        </Col>\n      </Row>\n    </AuthContext.Provider>\n  );\n}\n\nexport default App;","import React from 'react';\r\nimport Landing from '../User/Login/Login';\r\nimport MainPostPage from '../Post/MainPostPage';\r\nimport Main from '../Components/MainScreen';\r\nimport NewPost from '../Post/CreatePost';\r\nimport Account from '../User/Account/Settings';\r\nimport MyPosts from '../Post/MyPosts';\r\nimport Signup from '../User/SignUp/Signup';\r\n\r\n// import ErrorPage from './ErrorPage';\r\nimport { Route, Switch, Redirect } from 'react-router-dom';\r\n\r\nexport default function getThePage(isAuthenticated) {\r\n\r\n  // console.log(\"isAuthenticated: \", isAuthenticated);\r\n  // console.log(\"localStorage: \", localStorage.getItem(\"user_id\"))\r\n  return(\r\n      <Switch>\r\n        {!localStorage.getItem(\"user_id\") ? (\r\n          <Switch>\r\n          <Route exact path=\"/\">\r\n            <Landing />\r\n          </Route>\r\n          <Route exact path=\"/Login\">\r\n            <Landing />\r\n          </Route>\r\n          <Route exact path=\"/Signup\">\r\n            <Signup />\r\n          </Route>\r\n          </Switch>\r\n        ) : (\r\n          <Switch>\r\n          <Route exact path=\"/Home\">\r\n            <MainPostPage />\r\n          </Route>\r\n          <Route exact path=\"/My Posts\">\r\n            <MyPosts />\r\n          </Route>\r\n          <Route exact path=\"/New Post\">\r\n            <NewPost />\r\n          </Route>\r\n          <Route exact path=\"/Account\">\r\n            <Account />\r\n          </Route>\r\n          <Route exact path=\"/Sign-up\">\r\n            <Signup />\r\n          </Route>\r\n          <Route exact path=\"/\">\r\n            <Landing />\r\n          </Route>\r\n          <Route path=\"*\">\r\n            <MainPostPage />\r\n          </Route>\r\n          </Switch>\r\n        )\r\n        }\r\n\r\n        {/* <Route path=\"/\">\r\n          <ErrorPage/>\r\n        </Route> */}\r\n      </Switch>\r\n  )\r\n\r\n};","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n// import MainPostPage from './Post/MainPostPage';\n// import Login from './User/Login/Login';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { BrowserRouter as Router } from 'react-router-dom';\n\nReactDOM.render(\n<Router>\n  <App />\n</Router>,\ndocument.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/TestImage.13988554.jpg\";"],"sourceRoot":""}